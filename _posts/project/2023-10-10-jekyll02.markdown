---
layout: post
current: post
cover:  assets/built/images/jekyll_githubpage.jpg
navigation: True
title: jekyll + GitHubPage 환경 구축(2)
date: 2023-10-10 00:00:00 +0900
tags: [jekyll]
class: post-template
subclass: 'post tag-jekyll'
author: joeyeongjune
---

{% include jekyll-table-of-contents.html %}

## 참고영상
- [How to install and run Jekyll on Windows 10](https://youtu.be/HlfvhkDuicc?si=5W50HJ3cXqevLej9)
- [jekyll 기반의 github 페이지 생성](https://www.youtube.com/watch?v=2ClW2LdqP30&list=PL7nkwz9MkASx1wxXK51n7KtwQyXgoNL70&index=1)

### Ruby
[Ruby homepage](https://rubyinstaller.org/downloads/)
==Ruby+Devit 2.7.8-1 (x64)==

### bundler
c:\>gem install bundler
c:\>bundler --version
Bundler version 2.4.20

### Theme download
search jekyll theme(jesper2) on braowser and download
c:\> mkdir blogmaker
copy to blogmaker from jekyll theme

### install gem
c:\>cd blogmaker
c:\blogmaker> bundle install
Its takes time...

```
Installing dnsruby...
  For issues and source code: https://github.com/alexdalitz/dnsruby
  For general discussion (please tell us how you use dnsruby): https://groups.google.com/forum/#!forum/dnsruby
Post-install message from sass:

Ruby Sass has reached end-of-life and should no longer be used.

* If you use Sass as a command-line tool, we recommend using Dart Sass, the new
  primary implementation: https://sass-lang.com/install

* If you use Sass as a plug-in for a Ruby web framework, we recommend using the
  sassc gem: https://github.com/sass/sassc-ruby#readme

* For more details, please refer to the Sass blog:
  https://sass-lang.com/blog/posts/7828841

Post-install message from html-pipeline:
-------------------------------------------------
Thank you for installing html-pipeline!
You must bundle Filter gem dependencies.
See html-pipeline README.md for more details.
https://github.com/jch/html-pipeline#dependencies
-------------------------------------------------
Post-install message from rubyzip:
RubyZip 3.0 is coming!
**********************

The public API of some Rubyzip classes has been modernized to use named
parameters for optional arguments. Please check your usage of the
following classes:
  * `Zip::File`
  * `Zip::Entry`
  * `Zip::InputStream`
  * `Zip::OutputStream`

Please ensure that your Gemfiles and .gemspecs are suitably restrictive
to avoid an unexpected breakage when 3.0 is released (e.g. ~> 2.3.0).
See https://github.com/rubyzip/rubyzip for details. The Changelog also
lists other enhancements and bugfixes that have been implemented since
version 2.3.0.
```


```
Configuration file: C:/blogmaker/_config.yml
            Source: C:/blogmaker
       Destination: ../jasper2-pages/
 Incremental build: disabled. Enable with --incremental
      Generating...
       Jekyll Feed: Generating feed for posts
                    done in 2.329 seconds.
  Please add the following to your Gemfile to avoid polling for changes:
    gem 'wdm', '>= 0.1.0' if Gem.win_platform?
 Auto-regeneration: enabled for 'C:/blogmaker'
    Server address: http://127.0.0.1:4000/jasper2//
  Server running... press ctrl-c to stop.
```
Open [c:\blogmaker>Gemfile] and Add [gem 'wdm', '>= 0.1.0']

c:\>bundle exec jekyll serve (or [c:\>bundle install] again)

**Builded**
```
Destination: ../jasper2-pages/
```
==추후 github page Repository에 push 하는게 이 결과물이다.==

## 환경 설정

### Correction

**[workspace] > _config.yml**

```
# Jekyll configuration
markdown: kramdown
# kramdown : markdown의 개조판.
# markdown에서 불편한 사항을 개선한 형태.

# MyData
owner:
  name:           Yeongjune Joe
  avatar:         photo.jpg
  bio:            "IT"
  email:          yojucho.jp@gmail.com
  # Social networking links used in footer. Update and remove as you like.
  twitter:
  facebook:
  github:
  stackexchange:
  linkedin:
  instagram:
  flickr:
  tumblr:
  # google plus id, include the '+', eg +mmistakes
  google_plus:

highlighter: rouge
# text highlighter로 rouge이용
# 2016.02월 이후로 syntax highlighter는 rouge만 지원.
# Pygments 사용불가.

paginate: 20
# 작성한 모든 post를 하나의 페이지에 열거할 수 없으니
# pagination이 필요하고 몇개의 post를 하나의 page에서
# 보여줄 건지를 설정.

language: 'en-uk'
# 언어 설정

url: https://tickle.github.io
# Google Search Console에서 사용하는 sitemap.xml 생성시
# 이 url key값이 존재하지 않으면 sitemap.xml이
# 정상적으로 생성되지 않는다.
# 또한 disqus(댓글시스템)를 이용하기 위해서도 필요.
# 자신의 github page url을 입력
# ( https://your_github_id.github.io 형식 )

baseurl: /

# Website info
title: IT Technical Training
# 자신의 blog title.

description: IT기반기술 블로그
# blog home에 표시될 blog에 대한 전반적인 설명.

cover: assets/built/images/blog-cover1.png
# blog home에 표시될 blog cover image.

logo:
logo_dark:

favicon: assets/built/images/favicon.jpg
# favicon으로 사용할 image

production_url: https://tickle.github.io/
# 최종적으로 blog가 운영될 url

source_url: https://github.com/joeyeongjune/tickle/
# blogmaker(jekyll source folder)에 대한 github repository

# Social info
navigation: True
# Navigation bar link를 보여줄건지 여부

subscribers: True
# subscriber 기능을 사용할건지의 여부
# 저는 약간의 수정을 통해 subscriber 기능대신
# lunr.js를 이용한 검색 기능으로 대체 사용했습니다.
# 검색기능으로 대체하기 위해서
# `_includes/subscribe-form.html` 파일의 수정이 필요합니다.

twitter:
facebook:
# 만약 twitter와 facebook을 이용하면 username을 입력

# Disqus
disqus: True
disqus_shortname: xxxxxxxx
# disqus는 온라인 댓글 시스템. 댓글 기능을 사용하기 위해
# disqus를 이용할 것인지 여부와 만약 사용하면
# disqus shortname을 입력 ( disqus username이 아님 )


# Google Analytics
google_analytics: UA-xxxxxxxx-x # replace with your GA tracking identifier
# Google Analytics을 사용할 경우 GA tracking identifier를 입력

# Permalinks
permalink: /:title
# permalink: /author/:author
# permalink: /tag/:title
# 각각의 post에 고정주소를 어떤 방식으로 할당할 것인지를 결정
# 이 값을 바꾸면 작성한 포스트의 저장위치나 파일이름이 변경된다.

# gems and other configs
plugins: [jekyll-paginate, jekyll-feed, jekyll-gist]

feed:
  path: feed.xml

# Travis-CI 설정입니다.
safe: False
lsi: False

username: joeyeongjune
repo: tickle
# username : travis-ci와 연동하는 github의 username
# repo: travis-ci와 연동하는 github의 repository이름
# https://github.com/<username>/<repository>

branch: main
# 사용할 branch명

relative_source:

destination: ./output/
# compile된 결과가 생성되는 폴더
# 이 폴더안의 내용이 우리가 운영하는 블로그 내용이 컴파일되서 들어간다.
# 이 폴더안의 내용을 github repository(https://username.github.io)에 push
# 만약 Travis-CI를 이용할 예정이면 이 부분을 git submodule로
# github repository(https://username.github.io)에 연결해야 한다.


# exclude는 Jekyll컴파일 시 destination에 포함될 필요가
# 없는것들을 명시한다. (node_modules와 필요없는 것들은 제외)
exclude:
  - README.md
  - Rakefile
  - Gemfile
  - Gemfile.lock
  - changelog.md
  - "*.Rmd"
  - vendor
  - .travis.yml
  - node_modules
  - assets/css
  - assets/images
  - _posts/angular
  - _posts/et-cetera
  - _posts/python
  - _posts/typescript
#  - _posts/jekyll
  - _posts/iot
  - _posts/r
  - _posts/economy
```

### 환경변수 추가

[スタート] - [マウス右クリック] - [システム] - [関連リンク：システムの詳細設定] - [詳細設定] - [環境変数] - [ユーザの環境変数：新規]

 - 変数名：JEKYLL_ENV
 - 変数値：production



**[workspace] > _data**

```
> authors.yml
joeyeongjune :
  username: joeyeongjune    # user name : martin
  name: joeyeongjune        # user full name : Martin Luther King
  url_full:             # Homepage url
  url:
  bio:                  # 회사정보
  picture: assets/built/images/economy-author-logo.jpg   # author image
  facebook:             # facebook ID
  twitter:              # twitter ID
  cover: False
```

```
> tags.yml
jekyll :
  name: jekyll
  description: False
  cover: assets/built/images/background-frontend.jpg
```

```
> _includes > navigation.html
<ul class="nav" role="menu">
    <li class="nav-home" role="menuitem"><a href="{{site.baseurl}}">home</a></li>
    <li class="nav-about" role="menuitem"><a href="{{site.baseurl}}about/">about</a></li>
    <li class="nav-project" role="menuitem"><a href="{{site.baseurl}}tag/project/">project</a></li>
    <li class="nav-study" role="menuitem"><a href="{{site.baseurl}}tag/study/">study</a></li>
    <li class="nav-toy" role="menuitem"><a href="{{site.baseurl}}tag/toy/">toy</a></li>
    <li class="nav-archive" role="menuitem">
        <a href="/archive.html">All Posts</a>
    </li>
    <li class="nav-archive" role="menuitem">
        <a href="/author_archive.html">Tag별 Posts</a>
    </li>
</ul>
```

```
> about > index.md
본문 내용 수정
```

### _post 폴더 정리
```
navigation.html 파일에서 설정한 태그명을 _post 폴더안에 하위폴더로 생성 하고, 나머지 필요 없는 파일들은 삭제 한다.
```

## Images 파일 설정
```
*** 설정 파일
[workspace] > _data > authors.yml
  picture: assets/built/images/author-logo.png  # author image

*** 이미지 파일을 배치
[workspace] > assets > built > images
  author-logo.png

→ 모든 post 의 author 이름은, authors.yml 파일에서 정의한 auth 이름과 동일해야만 제대로 표시가 된다.  
```