<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="https://joeyeongjune.github.io/tag/jekyll/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://joeyeongjune.github.io/" rel="alternate" type="text/html" />
  <updated>2023-10-13T12:04:19+09:00</updated>
  <id>https://joeyeongjune.github.io/tag/jekyll/feed.xml</id>

  
  
  

  
    <title type="html">IT Technical Training | </title>
  

  
    <subtitle>IT기반 공부 블로그</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">jekyll + GitHubPage 환경 구축(4)</title>
      <link href="https://joeyeongjune.github.io/jekyll04" rel="alternate" type="text/html" title="jekyll + GitHubPage 환경 구축(4)" />
      <published>2023-10-12T00:00:00+09:00</published>
      <updated>2023-10-12T00:00:00+09:00</updated>
      <id>https://joeyeongjune.github.io/jekyll04</id>
      <content type="html" xml:base="https://joeyeongjune.github.io/jekyll04">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;jekyll + GitHubPage 환경 구축은 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./jekyll01&quot;&gt;jekyll + GitHubPage 환경 구축(1)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./jekyll02&quot;&gt;jekyll + GitHubPage 환경 구축(2)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./jekyll03&quot;&gt;jekyll + GitHubPage 환경 구축(3)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./jekyll04&quot;&gt;jekyll + GitHubPage 환경 구축(4)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;참고영상&quot;&gt;참고영상&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://youtu.be/HlfvhkDuicc?si=5W50HJ3cXqevLej9&quot;&gt;How to install and run Jekyll on Windows 10&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=2ClW2LdqP30&amp;amp;list=PL7nkwz9MkASx1wxXK51n7KtwQyXgoNL70&amp;amp;index=1&quot;&gt;jekyll 기반의 github 페이지 생성&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;customcss-변경&quot;&gt;custom.css 변경&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- 각 포스트글에 &amp;lt;span class=&quot;table-of-contents-list&quot;&amp;gt;jekyll + GitHubPage 환경 구축은 여러 절로 구성되어 있습니다. &amp;lt;/span&amp;gt;
&amp;lt;ul class=&quot;table-of-contents-list&quot;&amp;gt;
    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;./jekyll01&quot;&amp;gt;jekyll + GitHubPage 환경 구축(1)&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;./jekyll02&quot;&amp;gt;jekyll + GitHubPage 환경 구축(2)&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;./jekyll03&quot;&amp;gt;jekyll + GitHubPage 환경 구축(3)&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;./jekyll04&quot;&amp;gt;jekyll + GitHubPage 환경 구축(4)&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt; 추가
- [_layouts] &amp;gt; [default.html] &amp;gt; &amp;lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/built/custom.css&quot; /&amp;gt; 추가
- [/assets/css/custom.css] 에서 [/aasts/built/custom.css] 로 파일을 이동 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>joeyeongjune</name>
        
        
      </author>

      

      
        <category term="jekyll" />
      

      
        <summary type="html">jekyll + GitHubPage 환경 구축은 여러 절로 구성되어 있습니다. jekyll + GitHubPage 환경 구축(1) jekyll + GitHubPage 환경 구축(2) jekyll + GitHubPage 환경 구축(3) jekyll + GitHubPage 환경 구축(4)</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">jekyll + GitHubPage 환경 구축(3)</title>
      <link href="https://joeyeongjune.github.io/jekyll03" rel="alternate" type="text/html" title="jekyll + GitHubPage 환경 구축(3)" />
      <published>2023-10-11T00:00:00+09:00</published>
      <updated>2023-10-11T00:00:00+09:00</updated>
      <id>https://joeyeongjune.github.io/jekyll03</id>
      <content type="html" xml:base="https://joeyeongjune.github.io/jekyll03">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;jekyll + GitHubPage 환경 구축은 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./jekyll01&quot;&gt;jekyll + GitHubPage 환경 구축(1)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./jekyll02&quot;&gt;jekyll + GitHubPage 환경 구축(2)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./jekyll03&quot;&gt;jekyll + GitHubPage 환경 구축(3)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./jekyll04&quot;&gt;jekyll + GitHubPage 환경 구축(4)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;참고영상&quot;&gt;참고영상&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://youtu.be/HlfvhkDuicc?si=5W50HJ3cXqevLej9&quot;&gt;How to install and run Jekyll on Windows 10&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=2ClW2LdqP30&amp;amp;list=PL7nkwz9MkASx1wxXK51n7KtwQyXgoNL70&amp;amp;index=1&quot;&gt;jekyll 기반의 github 페이지 생성&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;npm-install&quot;&gt;npm install&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. _includes 폴더 하위에 파일 생성 (jekyll-table-of-contents.html)
2. assets/css/custom.css 생성
3. gulpfile.js 수정
4. package.json 수정
5. node js 설치
6. IDE(visual studio code) 재기동
7. npm install
8. gulp install (https://digitalidentity.co.jp/blog/creative/gulp.html#gulp-2)
9. gulp css 설치 &amp;gt; 
 -- error --
PS C:\blogmaker&amp;gt; gulp css
gulp : このシステムではスクリプトの実行が無効になっているため、ファイル C:\Users\admin\AppData\Roaming\npm\gulp.ps1 を読み込むことができません。
詳細については、「about_Execution_Policies」(https://go.microsoft.com/fwlink/?LinkID=135170) を参照してください。
発生場所 行:1 文字:1
+ gulp css
+ ~~~~
    + CategoryInfo          : セキュリティ エラー: (: ) []、PSSecurityException
    + FullyQualifiedErrorId : UnauthorizedAccess


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;powershell 을 관리자 권한으로 기동해서 폴리시를 변경후 &amp;gt; Set-ExecutionPolicy Unrestricted 후 실행&lt;/li&gt;
  &lt;li&gt;또는 cmd를 관리자 권한으로 기동해서 실행&lt;/li&gt;
  &lt;li&gt;하면 에러는 없지만, 어느쪽도 강의와 동일한 결과는 안나옴.&lt;/li&gt;
  &lt;li&gt;assets/built/custom.css 에 파일이 생성안되고,  [workspace] 에 별도의 css 폴더가 생성 되면서 초기 파일을 생성 시킴.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;post-목차-부분은-일단-패스&quot;&gt;post 목차 부분은 일단 패스&lt;/h1&gt;</content>

      
      
      
      
      

      <author>
          <name>joeyeongjune</name>
        
        
      </author>

      

      
        <category term="jekyll" />
      

      
        <summary type="html">jekyll + GitHubPage 환경 구축은 여러 절로 구성되어 있습니다. jekyll + GitHubPage 환경 구축(1) jekyll + GitHubPage 환경 구축(2) jekyll + GitHubPage 환경 구축(3) jekyll + GitHubPage 환경 구축(4)</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">jekyll + GitHubPage 환경 구축(2)</title>
      <link href="https://joeyeongjune.github.io/jekyll02" rel="alternate" type="text/html" title="jekyll + GitHubPage 환경 구축(2)" />
      <published>2023-10-10T00:00:00+09:00</published>
      <updated>2023-10-10T00:00:00+09:00</updated>
      <id>https://joeyeongjune.github.io/jekyll02</id>
      <content type="html" xml:base="https://joeyeongjune.github.io/jekyll02">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;jekyll + GitHubPage 환경 구축은 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./jekyll01&quot;&gt;jekyll + GitHubPage 환경 구축(1)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./jekyll02&quot;&gt;jekyll + GitHubPage 환경 구축(2)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./jekyll03&quot;&gt;jekyll + GitHubPage 환경 구축(3)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./jekyll04&quot;&gt;jekyll + GitHubPage 환경 구축(4)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;참고영상&quot;&gt;참고영상&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://youtu.be/HlfvhkDuicc?si=5W50HJ3cXqevLej9&quot;&gt;How to install and run Jekyll on Windows 10&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=2ClW2LdqP30&amp;amp;list=PL7nkwz9MkASx1wxXK51n7KtwQyXgoNL70&amp;amp;index=1&quot;&gt;jekyll 기반의 github 페이지 생성&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ruby&quot;&gt;Ruby&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;Ruby homepage&lt;/a&gt;
==Ruby+Devit 2.7.8-1 (x64)==&lt;/p&gt;

&lt;h3 id=&quot;bundler&quot;&gt;bundler&lt;/h3&gt;
&lt;p&gt;c:&amp;gt;gem install bundler
c:&amp;gt;bundler –version
Bundler version 2.4.20&lt;/p&gt;

&lt;h3 id=&quot;theme-download&quot;&gt;Theme download&lt;/h3&gt;
&lt;p&gt;search jekyll theme(jesper2) on braowser and download
c:&amp;gt; mkdir blogmaker
copy to blogmaker from jekyll theme&lt;/p&gt;

&lt;h3 id=&quot;install-gem&quot;&gt;install gem&lt;/h3&gt;
&lt;p&gt;c:&amp;gt;cd blogmaker
c:\blogmaker&amp;gt; bundle install
Its takes time…&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Installing dnsruby...
  For issues and source code: https://github.com/alexdalitz/dnsruby
  For general discussion (please tell us how you use dnsruby): https://groups.google.com/forum/#!forum/dnsruby
Post-install message from sass:

Ruby Sass has reached end-of-life and should no longer be used.

* If you use Sass as a command-line tool, we recommend using Dart Sass, the new
  primary implementation: https://sass-lang.com/install

* If you use Sass as a plug-in for a Ruby web framework, we recommend using the
  sassc gem: https://github.com/sass/sassc-ruby#readme

* For more details, please refer to the Sass blog:
  https://sass-lang.com/blog/posts/7828841

Post-install message from html-pipeline:
-------------------------------------------------
Thank you for installing html-pipeline!
You must bundle Filter gem dependencies.
See html-pipeline README.md for more details.
https://github.com/jch/html-pipeline#dependencies
-------------------------------------------------
Post-install message from rubyzip:
RubyZip 3.0 is coming!
**********************

The public API of some Rubyzip classes has been modernized to use named
parameters for optional arguments. Please check your usage of the
following classes:
  * `Zip::File`
  * `Zip::Entry`
  * `Zip::InputStream`
  * `Zip::OutputStream`

Please ensure that your Gemfiles and .gemspecs are suitably restrictive
to avoid an unexpected breakage when 3.0 is released (e.g. ~&amp;gt; 2.3.0).
See https://github.com/rubyzip/rubyzip for details. The Changelog also
lists other enhancements and bugfixes that have been implemented since
version 2.3.0.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Configuration file: C:/blogmaker/_config.yml
            Source: C:/blogmaker
       Destination: ../jasper2-pages/
 Incremental build: disabled. Enable with --incremental
      Generating...
       Jekyll Feed: Generating feed for posts
                    done in 2.329 seconds.
  Please add the following to your Gemfile to avoid polling for changes:
    gem 'wdm', '&amp;gt;= 0.1.0' if Gem.win_platform?
 Auto-regeneration: enabled for 'C:/blogmaker'
    Server address: http://127.0.0.1:4000/jasper2//
  Server running... press ctrl-c to stop.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Open [c:\blogmaker&amp;gt;Gemfile] and Add [gem ‘wdm’, ‘&amp;gt;= 0.1.0’]&lt;/p&gt;

&lt;p&gt;c:&amp;gt;bundle exec jekyll serve (or [c:&amp;gt;bundle install] again)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Builded&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Destination: ../jasper2-pages/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;==추후 github page Repository에 push 하는게 이 결과물이다.==&lt;/p&gt;

&lt;h2 id=&quot;환경-설정&quot;&gt;환경 설정&lt;/h2&gt;

&lt;h3 id=&quot;correction&quot;&gt;Correction&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;[workspace] &amp;gt; _config.yml&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Jekyll configuration
markdown: kramdown
# kramdown : markdown의 개조판.
# markdown에서 불편한 사항을 개선한 형태.

# MyData
owner:
  name:           Yeongjune Joe
  avatar:         photo.jpg
  bio:            &quot;IT&quot;
  email:          yojucho.jp@gmail.com
  # Social networking links used in footer. Update and remove as you like.
  twitter:
  facebook:
  github:
  stackexchange:
  linkedin:
  instagram:
  flickr:
  tumblr:
  # google plus id, include the '+', eg +mmistakes
  google_plus:

highlighter: rouge
# text highlighter로 rouge이용
# 2016.02월 이후로 syntax highlighter는 rouge만 지원.
# Pygments 사용불가.

paginate: 20
# 작성한 모든 post를 하나의 페이지에 열거할 수 없으니
# pagination이 필요하고 몇개의 post를 하나의 page에서
# 보여줄 건지를 설정.

language: 'en-uk'
# 언어 설정

url: https://tickle.github.io
# Google Search Console에서 사용하는 sitemap.xml 생성시
# 이 url key값이 존재하지 않으면 sitemap.xml이
# 정상적으로 생성되지 않는다.
# 또한 disqus(댓글시스템)를 이용하기 위해서도 필요.
# 자신의 github page url을 입력
# ( https://your_github_id.github.io 형식 )

baseurl: /

# Website info
title: IT Technical Training
# 자신의 blog title.

description: IT기반기술 블로그
# blog home에 표시될 blog에 대한 전반적인 설명.

cover: assets/built/images/blog-cover1.png
# blog home에 표시될 blog cover image.

logo:
logo_dark:

favicon: assets/built/images/favicon.jpg
# favicon으로 사용할 image

production_url: https://tickle.github.io/
# 최종적으로 blog가 운영될 url

source_url: https://github.com/joeyeongjune/tickle/
# blogmaker(jekyll source folder)에 대한 github repository

# Social info
navigation: True
# Navigation bar link를 보여줄건지 여부

subscribers: True
# subscriber 기능을 사용할건지의 여부
# 저는 약간의 수정을 통해 subscriber 기능대신
# lunr.js를 이용한 검색 기능으로 대체 사용했습니다.
# 검색기능으로 대체하기 위해서
# `_includes/subscribe-form.html` 파일의 수정이 필요합니다.

twitter:
facebook:
# 만약 twitter와 facebook을 이용하면 username을 입력

# Disqus
disqus: True
disqus_shortname: xxxxxxxx
# disqus는 온라인 댓글 시스템. 댓글 기능을 사용하기 위해
# disqus를 이용할 것인지 여부와 만약 사용하면
# disqus shortname을 입력 ( disqus username이 아님 )


# Google Analytics
google_analytics: UA-xxxxxxxx-x # replace with your GA tracking identifier
# Google Analytics을 사용할 경우 GA tracking identifier를 입력

# Permalinks
permalink: /:title
# permalink: /author/:author
# permalink: /tag/:title
# 각각의 post에 고정주소를 어떤 방식으로 할당할 것인지를 결정
# 이 값을 바꾸면 작성한 포스트의 저장위치나 파일이름이 변경된다.

# gems and other configs
plugins: [jekyll-paginate, jekyll-feed, jekyll-gist]

feed:
  path: feed.xml

# Travis-CI 설정입니다.
safe: False
lsi: False

username: joeyeongjune
repo: tickle
# username : travis-ci와 연동하는 github의 username
# repo: travis-ci와 연동하는 github의 repository이름
# https://github.com/&amp;lt;username&amp;gt;/&amp;lt;repository&amp;gt;

branch: main
# 사용할 branch명

relative_source:

destination: ./output/
# compile된 결과가 생성되는 폴더
# 이 폴더안의 내용이 우리가 운영하는 블로그 내용이 컴파일되서 들어간다.
# 이 폴더안의 내용을 github repository(https://username.github.io)에 push
# 만약 Travis-CI를 이용할 예정이면 이 부분을 git submodule로
# github repository(https://username.github.io)에 연결해야 한다.


# exclude는 Jekyll컴파일 시 destination에 포함될 필요가
# 없는것들을 명시한다. (node_modules와 필요없는 것들은 제외)
exclude:
  - README.md
  - Rakefile
  - Gemfile
  - Gemfile.lock
  - changelog.md
  - &quot;*.Rmd&quot;
  - vendor
  - .travis.yml
  - node_modules
  - assets/css
  - assets/images
  - _posts/angular
  - _posts/et-cetera
  - _posts/python
  - _posts/typescript
#  - _posts/jekyll
  - _posts/iot
  - _posts/r
  - _posts/economy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;환경변수-추가&quot;&gt;환경변수 추가&lt;/h3&gt;

&lt;p&gt;[スタート] - [マウス右クリック] - [システム] - [関連リンク：システムの詳細設定] - [詳細設定] - [環境変数] - [ユーザの環境変数：新規]&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;変数名：JEKYLL_ENV&lt;/li&gt;
  &lt;li&gt;変数値：production&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;[workspace] &amp;gt; _data&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; authors.yml
joeyeongjune :
  username: joeyeongjune    # user name : martin
  name: joeyeongjune        # user full name : Martin Luther King
  url_full:             # Homepage url
  url:
  bio:                  # 회사정보
  picture: assets/built/images/economy-author-logo.jpg   # author image
  facebook:             # facebook ID
  twitter:              # twitter ID
  cover: False
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; tags.yml
jekyll :
  name: jekyll
  description: False
  cover: assets/built/images/background-frontend.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; _includes &amp;gt; navigation.html
&amp;lt;ul class=&quot;nav&quot; role=&quot;menu&quot;&amp;gt;
    &amp;lt;li class=&quot;nav-home&quot; role=&quot;menuitem&quot;&amp;gt;&amp;lt;a href=&quot;/&quot;&amp;gt;home&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;li class=&quot;nav-about&quot; role=&quot;menuitem&quot;&amp;gt;&amp;lt;a href=&quot;/about/&quot;&amp;gt;about&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;li class=&quot;nav-project&quot; role=&quot;menuitem&quot;&amp;gt;&amp;lt;a href=&quot;/tag/project/&quot;&amp;gt;project&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;li class=&quot;nav-study&quot; role=&quot;menuitem&quot;&amp;gt;&amp;lt;a href=&quot;/tag/study/&quot;&amp;gt;study&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;li class=&quot;nav-toy&quot; role=&quot;menuitem&quot;&amp;gt;&amp;lt;a href=&quot;/tag/toy/&quot;&amp;gt;toy&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;li class=&quot;nav-archive&quot; role=&quot;menuitem&quot;&amp;gt;
        &amp;lt;a href=&quot;/archive.html&quot;&amp;gt;All Posts&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li class=&quot;nav-archive&quot; role=&quot;menuitem&quot;&amp;gt;
        &amp;lt;a href=&quot;/author_archive.html&quot;&amp;gt;Tag별 Posts&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; about &amp;gt; index.md
본문 내용 수정
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;_post-폴더-정리&quot;&gt;_post 폴더 정리&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;navigation.html 파일에서 설정한 태그명을 _post 폴더안에 하위폴더로 생성 하고, 나머지 필요 없는 파일들은 삭제 한다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;images-파일-설정&quot;&gt;Images 파일 설정&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*** 설정 파일
[workspace] &amp;gt; _data &amp;gt; authors.yml
  picture: assets/built/images/author-logo.png  # author image

*** 이미지 파일을 배치
[workspace] &amp;gt; assets &amp;gt; built &amp;gt; images
  author-logo.png

→ 모든 post 의 author 이름은, authors.yml 파일에서 정의한 auth 이름과 동일해야만 제대로 표시가 된다.  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>joeyeongjune</name>
        
        
      </author>

      

      
        <category term="jekyll" />
      

      
        <summary type="html">jekyll + GitHubPage 환경 구축은 여러 절로 구성되어 있습니다. jekyll + GitHubPage 환경 구축(1) jekyll + GitHubPage 환경 구축(2) jekyll + GitHubPage 환경 구축(3) jekyll + GitHubPage 환경 구축(4)</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">jekyll + GitHubPage 환경 구축(1)</title>
      <link href="https://joeyeongjune.github.io/jekyll01" rel="alternate" type="text/html" title="jekyll + GitHubPage 환경 구축(1)" />
      <published>2023-09-30T00:00:00+09:00</published>
      <updated>2023-09-30T00:00:00+09:00</updated>
      <id>https://joeyeongjune.github.io/jekyll01</id>
      <content type="html" xml:base="https://joeyeongjune.github.io/jekyll01">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;jekyll + GitHubPage 환경 구축은 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./jekyll01&quot;&gt;jekyll + GitHubPage 환경 구축(1)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./jekyll02&quot;&gt;jekyll + GitHubPage 환경 구축(2)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./jekyll03&quot;&gt;jekyll + GitHubPage 환경 구축(3)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./jekyll04&quot;&gt;jekyll + GitHubPage 환경 구축(4)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;참고영상&quot;&gt;참고영상&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://youtu.be/HlfvhkDuicc?si=5W50HJ3cXqevLej9&quot;&gt;How to install and run Jekyll on Windows 10&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=2ClW2LdqP30&amp;amp;list=PL7nkwz9MkASx1wxXK51n7KtwQyXgoNL70&amp;amp;index=1&quot;&gt;jekyll 기반의 github 페이지 생성&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ruby&quot;&gt;Ruby&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;Ruby homepage&lt;/a&gt;
==Ruby+Devit 2.7.8-1 (x64)==&lt;/p&gt;

&lt;h3 id=&quot;bundler&quot;&gt;bundler&lt;/h3&gt;
&lt;p&gt;c:&amp;gt;gem install bundler
c:&amp;gt;bundler –version
Bundler version 2.4.20&lt;/p&gt;

&lt;h3 id=&quot;theme-download&quot;&gt;Theme download&lt;/h3&gt;
&lt;p&gt;search jekyll theme(jesper2) on braowser and download
c:&amp;gt; mkdir blogmaker
copy to blogmaker from jekyll theme&lt;/p&gt;

&lt;h3 id=&quot;install-gem&quot;&gt;install gem&lt;/h3&gt;
&lt;p&gt;c:&amp;gt;cd blogmaker
c:\blogmaker&amp;gt; bundle install
Its takes time…&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Installing dnsruby...
  For issues and source code: https://github.com/alexdalitz/dnsruby
  For general discussion (please tell us how you use dnsruby): https://groups.google.com/forum/#!forum/dnsruby
Post-install message from sass:

Ruby Sass has reached end-of-life and should no longer be used.

* If you use Sass as a command-line tool, we recommend using Dart Sass, the new
  primary implementation: https://sass-lang.com/install

* If you use Sass as a plug-in for a Ruby web framework, we recommend using the
  sassc gem: https://github.com/sass/sassc-ruby#readme

* For more details, please refer to the Sass blog:
  https://sass-lang.com/blog/posts/7828841

Post-install message from html-pipeline:
-------------------------------------------------
Thank you for installing html-pipeline!
You must bundle Filter gem dependencies.
See html-pipeline README.md for more details.
https://github.com/jch/html-pipeline#dependencies
-------------------------------------------------
Post-install message from rubyzip:
RubyZip 3.0 is coming!
**********************

The public API of some Rubyzip classes has been modernized to use named
parameters for optional arguments. Please check your usage of the
following classes:
  * `Zip::File`
  * `Zip::Entry`
  * `Zip::InputStream`
  * `Zip::OutputStream`

Please ensure that your Gemfiles and .gemspecs are suitably restrictive
to avoid an unexpected breakage when 3.0 is released (e.g. ~&amp;gt; 2.3.0).
See https://github.com/rubyzip/rubyzip for details. The Changelog also
lists other enhancements and bugfixes that have been implemented since
version 2.3.0.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Configuration file: C:/blogmaker/_config.yml
            Source: C:/blogmaker
       Destination: ../jasper2-pages/
 Incremental build: disabled. Enable with --incremental
      Generating...
       Jekyll Feed: Generating feed for posts
                    done in 2.329 seconds.
  Please add the following to your Gemfile to avoid polling for changes:
    gem 'wdm', '&amp;gt;= 0.1.0' if Gem.win_platform?
 Auto-regeneration: enabled for 'C:/blogmaker'
    Server address: http://127.0.0.1:4000/jasper2//
  Server running... press ctrl-c to stop.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Open [c:\blogmaker&amp;gt;Gemfile] and Add [gem ‘wdm’, ‘&amp;gt;= 0.1.0’]&lt;/p&gt;

&lt;p&gt;c:&amp;gt;bundle exec jekyll serve (or [c:&amp;gt;bundle install] again)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Builded&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Destination: ../jasper2-pages/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;==추후 github page Repository에 push 하는게 이 결과물이다.==&lt;/p&gt;

&lt;h2 id=&quot;환경-설정&quot;&gt;환경 설정&lt;/h2&gt;

&lt;h3 id=&quot;correction&quot;&gt;Correction&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;[workspace] &amp;gt; _config.yml&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Jekyll configuration
markdown: kramdown
# kramdown : markdown의 개조판.
# markdown에서 불편한 사항을 개선한 형태.

# MyData
owner:
  name:           Yeongjune Joe
  avatar:         photo.jpg
  bio:            &quot;IT&quot;
  email:          yojucho.jp@gmail.com
  # Social networking links used in footer. Update and remove as you like.
  twitter:
  facebook:
  github:
  stackexchange:
  linkedin:
  instagram:
  flickr:
  tumblr:
  # google plus id, include the '+', eg +mmistakes
  google_plus:

highlighter: rouge
# text highlighter로 rouge이용
# 2016.02월 이후로 syntax highlighter는 rouge만 지원.
# Pygments 사용불가.

paginate: 20
# 작성한 모든 post를 하나의 페이지에 열거할 수 없으니
# pagination이 필요하고 몇개의 post를 하나의 page에서
# 보여줄 건지를 설정.

language: 'en-uk'
# 언어 설정

url: https://tickle.github.io
# Google Search Console에서 사용하는 sitemap.xml 생성시
# 이 url key값이 존재하지 않으면 sitemap.xml이
# 정상적으로 생성되지 않는다.
# 또한 disqus(댓글시스템)를 이용하기 위해서도 필요.
# 자신의 github page url을 입력
# ( https://your_github_id.github.io 형식 )

baseurl: /

# Website info
title: IT Technical Training
# 자신의 blog title.

description: IT기반기술 블로그
# blog home에 표시될 blog에 대한 전반적인 설명.

cover: assets/built/images/blog-cover1.png
# blog home에 표시될 blog cover image.

logo:
logo_dark:

favicon: assets/built/images/favicon.jpg
# favicon으로 사용할 image

production_url: https://tickle.github.io/
# 최종적으로 blog가 운영될 url

source_url: https://github.com/joeyeongjune/tickle/
# blogmaker(jekyll source folder)에 대한 github repository

# Social info
navigation: True
# Navigation bar link를 보여줄건지 여부

subscribers: True
# subscriber 기능을 사용할건지의 여부
# 저는 약간의 수정을 통해 subscriber 기능대신
# lunr.js를 이용한 검색 기능으로 대체 사용했습니다.
# 검색기능으로 대체하기 위해서
# `_includes/subscribe-form.html` 파일의 수정이 필요합니다.

twitter:
facebook:
# 만약 twitter와 facebook을 이용하면 username을 입력

# Disqus
disqus: True
disqus_shortname: xxxxxxxx
# disqus는 온라인 댓글 시스템. 댓글 기능을 사용하기 위해
# disqus를 이용할 것인지 여부와 만약 사용하면
# disqus shortname을 입력 ( disqus username이 아님 )


# Google Analytics
google_analytics: UA-xxxxxxxx-x # replace with your GA tracking identifier
# Google Analytics을 사용할 경우 GA tracking identifier를 입력

# Permalinks
permalink: /:title
# permalink: /author/:author
# permalink: /tag/:title
# 각각의 post에 고정주소를 어떤 방식으로 할당할 것인지를 결정
# 이 값을 바꾸면 작성한 포스트의 저장위치나 파일이름이 변경된다.

# gems and other configs
plugins: [jekyll-paginate, jekyll-feed, jekyll-gist]

feed:
  path: feed.xml

# Travis-CI 설정입니다.
safe: False
lsi: False

username: joeyeongjune
repo: tickle
# username : travis-ci와 연동하는 github의 username
# repo: travis-ci와 연동하는 github의 repository이름
# https://github.com/&amp;lt;username&amp;gt;/&amp;lt;repository&amp;gt;

branch: main
# 사용할 branch명

relative_source:

destination: ./output/
# compile된 결과가 생성되는 폴더
# 이 폴더안의 내용이 우리가 운영하는 블로그 내용이 컴파일되서 들어간다.
# 이 폴더안의 내용을 github repository(https://username.github.io)에 push
# 만약 Travis-CI를 이용할 예정이면 이 부분을 git submodule로
# github repository(https://username.github.io)에 연결해야 한다.


# exclude는 Jekyll컴파일 시 destination에 포함될 필요가
# 없는것들을 명시한다. (node_modules와 필요없는 것들은 제외)
exclude:
  - README.md
  - Rakefile
  - Gemfile
  - Gemfile.lock
  - changelog.md
  - &quot;*.Rmd&quot;
  - vendor
  - .travis.yml
  - node_modules
  - assets/css
  - assets/images
  - _posts/angular
  - _posts/et-cetera
  - _posts/python
  - _posts/typescript
#  - _posts/jekyll
  - _posts/iot
  - _posts/r
  - _posts/economy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;환경변수-추가&quot;&gt;환경변수 추가&lt;/h3&gt;

&lt;p&gt;[スタート] - [マウス右クリック] - [システム] - [関連リンク：システムの詳細設定] - [詳細設定] - [環境変数] - [ユーザの環境変数：新規]&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;変数名：JEKYLL_ENV&lt;/li&gt;
  &lt;li&gt;変数値：production&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;[workspace] &amp;gt; _data&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; authors.yml
joeyeongjune :
  username: joeyeongjune    # user name : martin
  name: joeyeongjune        # user full name : Martin Luther King
  url_full:             # Homepage url
  url:
  bio:                  # 회사정보
  picture: assets/built/images/economy-author-logo.jpg   # author image
  facebook:             # facebook ID
  twitter:              # twitter ID
  cover: False
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; tags.yml
jekyll :
  name: jekyll
  description: False
  cover: assets/built/images/background-frontend.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; _includes &amp;gt; navigation.html
&amp;lt;ul class=&quot;nav&quot; role=&quot;menu&quot;&amp;gt;
    &amp;lt;li class=&quot;nav-home&quot; role=&quot;menuitem&quot;&amp;gt;&amp;lt;a href=&quot;/&quot;&amp;gt;home&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;li class=&quot;nav-about&quot; role=&quot;menuitem&quot;&amp;gt;&amp;lt;a href=&quot;/about/&quot;&amp;gt;about&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;li class=&quot;nav-project&quot; role=&quot;menuitem&quot;&amp;gt;&amp;lt;a href=&quot;/tag/project/&quot;&amp;gt;project&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;li class=&quot;nav-study&quot; role=&quot;menuitem&quot;&amp;gt;&amp;lt;a href=&quot;/tag/study/&quot;&amp;gt;study&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;li class=&quot;nav-toy&quot; role=&quot;menuitem&quot;&amp;gt;&amp;lt;a href=&quot;/tag/toy/&quot;&amp;gt;toy&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;li class=&quot;nav-archive&quot; role=&quot;menuitem&quot;&amp;gt;
        &amp;lt;a href=&quot;/archive.html&quot;&amp;gt;All Posts&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li class=&quot;nav-archive&quot; role=&quot;menuitem&quot;&amp;gt;
        &amp;lt;a href=&quot;/author_archive.html&quot;&amp;gt;Tag별 Posts&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; about &amp;gt; index.md
본문 내용 수정
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;_post-폴더-정리&quot;&gt;_post 폴더 정리&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;navigation.html 파일에서 설정한 태그명을 _post 폴더안에 하위폴더로 생성 하고, 나머지 필요 없는 파일들은 삭제 한다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;images-파일-설정&quot;&gt;Images 파일 설정&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*** 설정 파일
[workspace] &amp;gt; _data &amp;gt; authors.yml
  picture: assets/built/images/author-logo.png  # author image

*** 이미지 파일을 배치
[workspace] &amp;gt; assets &amp;gt; built &amp;gt; images
  author-logo.png

→ 모든 post 의 author 이름은, authors.yml 파일에서 정의한 auth 이름과 동일해야만 제대로 표시가 된다.  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>joeyeongjune</name>
        
        
      </author>

      

      
        <category term="jekyll" />
      

      
        <summary type="html">jekyll + GitHubPage 환경 구축은 여러 절로 구성되어 있습니다. jekyll + GitHubPage 환경 구축(1) jekyll + GitHubPage 환경 구축(2) jekyll + GitHubPage 환경 구축(3) jekyll + GitHubPage 환경 구축(4)</summary>
      

      
      
    </entry>
  
</feed>
